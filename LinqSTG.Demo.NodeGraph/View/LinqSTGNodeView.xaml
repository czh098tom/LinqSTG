<UserControl x:Name="userControl" x:Class="LinqSTG.Demo.NodeGraph.View.LinqSTGNodeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LinqSTG.Demo.NodeGraph.View"
             xmlns:views="clr-namespace:NodeNetwork.Views;assembly=NodeNetwork"
             xmlns:reactiveUi="http://reactiveui.net"
             xmlns:controls="clr-namespace:NodeNetwork.Views.Controls;assembly=NodeNetwork"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ControlTemplate x:Key="ArrowTemplate" TargetType="controls:ArrowToggleButton">
            <Viewbox StretchDirection="Both" Stretch="Uniform">
                <Grid Width="20" Height="20">
                    <Path Width="20" Height="12" Stretch="Fill" Stroke="#AAA" Fill="Transparent" StrokeThickness="3" Data="M 0,0 L 10,9.5 L 20,0 ">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=button}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#FFF" Duration="0:0:0.1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" To="#AAA" Duration="0:0:0.1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                    <Grid.RenderTransform>
                        <RotateTransform CenterX="10" CenterY="10"/>
                    </Grid.RenderTransform>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=button}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)" To="-90" Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)" To="0" Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>
            </Viewbox>
        </ControlTemplate>
    </UserControl.Resources>
    <views:NodeView x:Name="NodeView" TitleFontSize="16" FontFamily="Arial" >
        <views:NodeView.Style>
            <Style TargetType="{x:Type views:NodeView}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0.0" Color="#FF202020" />
                            <GradientStop Offset="1.0" Color="Black" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="TitleFontFamily" Value="Segoe UI Semibold"/>
                <Setter Property="TitleFontSize" Value="18"/>
                <Setter Property="BorderBrush" Value="Orange"/>
                <Setter Property="CornerRadius" Value="4"/>
                <Setter Property="ArrowSize" Value="20"/>
                <Setter Property="EndpointsStackingOrientation" Value="Vertical"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="views:NodeView">
                            <controls:FillPanel x:Name="Container">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="{x:Static views:NodeView.SelectedVisualStatesGroup}">
                                        <VisualState Name="{x:Static views:NodeView.SelectedState}">
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0" To="-3" 
                                                            Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                                <ThicknessAnimation Duration="0" To="3" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="{x:Static views:NodeView.UnselectedState}">
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                                <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Border x:Name="Border" Margin="10,0,10,0" CornerRadius="{TemplateBinding CornerRadius}"
                                        MinWidth="100" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Grid>
                                        <Thumb VerticalAlignment="Bottom" Height="10" x:Name="ResizeVerticalThumb" Cursor="SizeNS">
                                            <Thumb.Template>
                                                <ControlTemplate>
                                                    <Canvas Background="White" Opacity="0"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                            <Thumb.Style>
                                                <Style TargetType="Thumb">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Resizable}" Value="Horizontal">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                        <Thumb HorizontalAlignment="Right" Width="10" x:Name="ResizeHorizontalThumb" Cursor="SizeWE">
                                            <Thumb.Template>
                                                <ControlTemplate>
                                                    <Canvas Background="White" Opacity="0"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                            <Thumb.Style>
                                                <Style TargetType="Thumb">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Resizable}" Value="Vertical">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                        <Thumb HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="10" Height="10" x:Name="ResizeDiagonalThumb" Cursor="SizeNWSE">
                                            <Thumb.Template>
                                                <ControlTemplate>
                                                    <Canvas Background="White" Opacity="0"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                            <Thumb.Style>
                                                <Style TargetType="Thumb">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Resizable}" Value="Vertical">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Resizable}" Value="Horizontal">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                        <StackPanel>
                                            <Border CornerRadius="5">
                                                <Border.Background>
                                                    <DrawingBrush>
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <GeometryDrawing>
                                                                    <GeometryDrawing.Geometry>
                                                                        <GeometryGroup>
                                                                            <RectangleGeometry Rect="0,0,1,1"/>
                                                                        </GeometryGroup>
                                                                    </GeometryDrawing.Geometry>
                                                                    <GeometryDrawing.Brush>
                                                                        <LinearGradientBrush>
                                                                            <GradientStopCollection>
                                                                                <GradientStop Color="{Binding TitleColor, ElementName=userControl}" 
                                                                                              d:Color="#FFDB811C" Offset="0"/>
                                                                                <GradientStop Color="#FF202020" Offset="1"/>
                                                                            </GradientStopCollection>
                                                                        </LinearGradientBrush>
                                                                    </GeometryDrawing.Brush>
                                                                </GeometryDrawing>
                                                                <GeometryDrawing>
                                                                    <GeometryDrawing.Geometry>
                                                                        <GeometryGroup>
                                                                            <RectangleGeometry Rect="0,0,1,1"/>
                                                                        </GeometryGroup>
                                                                    </GeometryDrawing.Geometry>
                                                                    <GeometryDrawing.Brush>
                                                                        <RadialGradientBrush Center="0,0.5" RadiusX="1">
                                                                            <RadialGradientBrush.GradientStops>
                                                                                <GradientStopCollection>
                                                                                    <GradientStop Color="#A0202020" Offset="0.2"/>
                                                                                    <GradientStop Color="#00000000" Offset="1"/>
                                                                                </GradientStopCollection>
                                                                            </RadialGradientBrush.GradientStops>
                                                                        </RadialGradientBrush>
                                                                    </GeometryDrawing.Brush>
                                                                </GeometryDrawing>
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Border.Background>
                                                <StackPanel>
                                                    <Canvas x:Name="HeaderTopMargin" Width="auto" Height="5"/>
                                                    <DockPanel>
                                                        <Image x:Name="HeaderIcon" MaxWidth="{TemplateBinding ArrowSize}" MaxHeight="{TemplateBinding ArrowSize}" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                                        <TextBlock x:Name="NameLabel" TextWrapping="Wrap" Background="Transparent" Foreground="{TemplateBinding Foreground}" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center"
                                                                   FontFamily="{TemplateBinding TitleFontFamily}" FontSize="{TemplateBinding TitleFontSize}" Margin="10,0,0,0"/>
                                                        <controls:ArrowToggleButton x:Name="CollapseButton" Width="{TemplateBinding ArrowSize}" Height="{TemplateBinding ArrowSize}" DockPanel.Dock="Right" 
                                                                      HorizontalAlignment="Right" VerticalAlignment="Center" Margin="20,0,10,0" Template="{StaticResource ResourceKey=ArrowTemplate}">
                                                        </controls:ArrowToggleButton>
                                                    </DockPanel>
                                                    <Canvas x:Name="HeaderBottomMargin" Width="auto" Height="5"/>
                                                </StackPanel>
                                            </Border>

                                            <ContentPresenter x:Name="LeadingControlPresenter" Style="{TemplateBinding LeadingControlPresenterStyle}"/>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="5"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ItemsControl x:Name="InputsList" Grid.Column="0" IsTabStop="False">
                                                    <ItemsControl.Style>
                                                        <Style TargetType="ItemsControl">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Vertical">
                                                                    <Setter Property="DockPanel.Dock" Value="Top"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Horizontal">
                                                                    <Setter Property="DockPanel.Dock" Value="Left"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ItemsControl.Style>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate DataType="viewModels:NodeInputViewModel">
                                                            <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False"/>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>

                                                <ItemsControl x:Name="OutputsList" Grid.Column="2" IsTabStop="False">
                                                    <ItemsControl.Style>
                                                        <Style TargetType="ItemsControl">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Vertical">
                                                                    <Setter Property="DockPanel.Dock" Value="Bottom"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Horizontal">
                                                                    <Setter Property="DockPanel.Dock" Value="Right"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ItemsControl.Style>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate DataType="viewModels:NodeOutputViewModel">
                                                            <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False"/>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </Grid>
                                            <ItemsControl x:Name="EndpointGroupsList" IsTabStop="False">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="viewModels:EndpointGroupViewModel">
                                                        <reactiveUi:ViewModelViewHost ViewModel="{Binding}"
                                                                              HorizontalContentAlignment="Stretch"
                                                                              VerticalContentAlignment="Stretch"
                                                                              IsTabStop="False" />
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                            <ContentPresenter x:Name="TrailingControlPresenter" Style="{TemplateBinding TrailingControlPresenterStyle}"/>

                                            <Canvas x:Name="BottomMargin" Width="auto" Height="5"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </controls:FillPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="3" Color="#FF000000" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Style>
        </views:NodeView.Style>
    </views:NodeView>
</UserControl>
